module Workarea
  decorate PriceAdjustmentSet, with: :global_e do
    def reduce_by_description(type, data = {})
      amounts = adjusting(type).reduce({}) do |memo, adjustment|
        memo[adjustment.description] ||= {
          amount: 0.to_m,
          parent: adjustment._parent,
          data: adjustment.data
        }

        memo[adjustment.description][:amount] += adjustment.amount
        memo[adjustment.description][:data].merge adjustment.data
        memo
      end

      self.class.new(
        amounts.map do |(description, aggregate)|
          PriceAdjustment.new(
            _parent: aggregate[:parent],
            price: type,
            data: aggregate[:data].merge(data),
            description: description,
            amount: aggregate[:amount]
          )
        end
      )
    end
  end
end
