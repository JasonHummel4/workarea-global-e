module Workarea
  decorate Storefront::ProductViewModel, with: :global_e do
    decorated do
      delegate :sell_min_fixed_prices, :sell_max_fixed_prices, :original_min_fixed_prices, :original_max_fixed_prices, to: :pricing
    end

    def current_product?
      options["controller"] == "workarea/storefront/products" &&
        options["action"] == "show" &&
        options["id"] == model.slug
    end

    # @return [::String, nil]
    #
    def country_exceptions_data
      return unless current_product?

      data = model.country_exceptions.map do |country_exception|
        [
          country_exception.country.alpha2,
          {
            restricted: country_exception.restricted.presence,
            vat: country_exception.vat_rate.presence
          }.compact
        ]
      end.to_h

      if model.global_e_forbidden?
        data["all"] = { "forbidden" => true }
      end

      data.to_json
    end
  end
end
